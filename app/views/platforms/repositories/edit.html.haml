-set_meta_tags title: [title_object(@repository), t('layout.repositories.edit')]
= render 'submenu'
= render 'sidebar'

%h3.fix= "#{t("layout.repositories.about")}: #{@repository.name}"

= form_for @repository, url: platform_repository_path(@platform, @repository), html: { class: :form } do |f|
  = render "form", f: f
%br

- if can?(:update, @repository)
  .hr
  %h3= t('layout.repositories.extra_actions')

  = form_for @repository, url: regenerate_metadata_platform_repository_path(@platform, @repository), html: { class: :form, method: :put } do |f|
    .leftlist= t('layout.repositories.regenerate_metadata')
    .rightlist
      = select_tag :build_for_platform_id, options_from_collection_for_select(Platform.main, :id, :name) if @platform.personal?
      = f.submit t('layout.repositories.regenerate_metadata'), data: { confirm: t('layout.confirm') }
  .both

  - if @repository.repository_statuses.present?
    %table#myTable.tablesorter.platform-repos{cellspacing: "0", cellpadding: "0"}
      %thead
        %tr
          %th= t('activerecord.attributes.regeneration_status.status')
          %th= t('activerecord.attributes.regeneration_status.last_regenerated_status')
          %th= t('activerecord.attributes.regeneration_status.last_regenerated_log_sha1')
          %th= t('activerecord.attributes.regeneration_status.last_regenerated_at')
          - unless @platform.main?
            %th= t('activerecord.models.platform')
      %tbody
        - @repository.repository_statuses.sort_by{ |s| s.platform.name }.each do |status|
          %tr{class: cycle('odd', 'even')}
            %td= t("layout.regeneration_statuses.statuses.#{status.human_status}")
            %td= t("layout.regeneration_statuses.last_regenerated_statuses.#{status.human_regeneration_status}")
            %td= link_to_file_store('regeneration.log', status.last_regenerated_log_sha1)
            %td= status.last_regenerated_at
            - unless @platform.main?
              %td= status.platform.name
    .both

  - if @platform.main?
    - if @repository.sync_lock_file_exists?
      - label = t('layout.repositories.remove_sync_lock_file')
      - path  = sync_lock_file_platform_repository_path(@platform, @repository, remove: true)
    - else
      - label = t('layout.repositories.add_sync_lock_file')
      - path  = sync_lock_file_platform_repository_path(@platform, @repository)
    = form_for @repository, url: path, html: { class: :form, method: :put } do |f|
      .leftlist= t('layout.repositories.sync_lock_file_info')
      .rightlist= f.submit label, data: { confirm: t('layout.confirm') }
    .both
  .hr



- if @platform.main?
  = render "shared/members_table",
    remove_members_path: remove_members_platform_repository_path(@platform, @repository),
    remove_member_path: remove_member_platform_repository_path(@platform, @repository),
    add_member_path: add_member_platform_repository_path(@platform, @repository),
    members: @members,
    editable_object: @repository
