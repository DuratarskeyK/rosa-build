-user= User.where(email: creator_email).first || User.new(email: creator_email) if defined?(creator_email)
.top
  .image= link_to(image_tag(avatar_url(user, :small), alt: 'avatar'), user_path(user)) if user.persisted?
  .text
    %span
      = raw t('notifications.bodies.build_task', id: build_list_id, task_link: build_list_path(build_list_id))
      - name_with_owner = "#{project_owner}/#{project_name}"
      = raw t('notifications.bodies.project', project_link: link_to(name_with_owner, name_with_owner) )
      - message, error = case status
        - when BuildList::BUILD_PENDING
          - ['pending', nil]
        - when BuildList::BUILD_PUBLISHED
          - ['published', nil]
        - when BuildList::SUCCESS
          - ['success', nil]
        - else ['failed', t("layout.build_lists.statuses.#{BuildList::HUMAN_STATUSES[status]}")]
      = raw t("notifications.bodies.build_status.#{message}", error: error)
    .both
      = datetime_moment updated_at, tag: :span, class: 'date'
  .both
