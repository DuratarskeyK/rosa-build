-html_options = { class: 'form-control' }
%accordion{ 'close-others' => 'false', 'ng-cloak' => true }
  %accordion-group{ 'is-open' => '$parent.isOpenServerStatus' }
    %accordion-heading
      = t 'layout.build_lists.build_server_status.header'
      %span.pull-right.fa{ 'ng-class' => "{'fa-chevron-down': isOpenServerStatus, 'fa-chevron-up': !isOpenServerStatus}" }
    = render 'server_status'

  %accordion-group{ 'is-open' => '$parent.isOpenFilters' }
    %accordion-heading
      = t 'layout.build_lists.filters'
      %span.pull-right.fa{ 'ng-class' => "{'fa-chevron-down': isOpenFilters, 'fa-chevron-up': !isOpenFilters}" }
    = form_for :filter, html: { class: :form, id: 'monitoring_filter' },
               authenticity_token: false do |f|
      .row
        .col-md-4.col-sm-6
          %h4= t 'layout.build_lists.ownership.header'
          =f.hidden_field :ownership, value: '{{params.filter.ownership}}' if current_user
          .btn-group.btn-group-justified
            - ['owned', (@project ? nil : 'related'), 'everything'].compact.each do |ownership|
              .btn-group
                %button.btn.btn-default{ 'ng-model' => 'params.filter.ownership', 'btn-radio' => "'#{ownership}'",
                                         type: 'button', disabled: !current_user }
                  = t "layout.build_lists.ownership.#{ownership}"
        .col-md-4.col-sm-6
          %h4= t 'activerecord.models.platform'
          = f.select :save_to_platform_id, availables_main_platforms.collect{ |pl| [pl.name, pl.id] },
                     { include_blank: true },
                     html_options.merge(id: 'platform', 'ng-model' => 'params.filter.save_to_platform_id')
        -[:updated_at_start, :updated_at_end].each do |attr|
          .col-md-2.col-sm-4
            %h4= t attr == :updated_at_start ? '_on' : 'until'
            = f.text_field attr, size: 10, class: 'form-control',
              'datepicker-popup' => '{{format}}', 'ng-model' => "params.filter.#{attr}",
              'is-opened' => 'opened', min: 'minDate', max: 'maxDate',
              'datepicker-options' => 'dateOptions', 'date-disabled' => "disabled(date, mode)"
        .col-md-4.col-sm-6
          %h4= t 'number_rows'
          =hidden_field_tag :per_page, '{{params.per_page}}'
          =hidden_field_tag :page, '{{params.page}}'
          .btn-group.btn-group-justified
            -BuildList::Filter::PER_PAGE.each do |num|
              .btn-group
                %button.btn.btn-default{ 'ng-model' => 'params.per_page', 'btn-radio' => "'#{num}'", type: 'button' }= num
        .col-md-4.col-sm-6
          %h4= t 'activerecord.attributes.build_list.arch'
          = f.select :arch_id, Arch.recent.collect{ |arch| [arch.name, arch.id] }, { include_blank: true },
                     html_options.merge(id: 'architecture', 'ng-model' => 'params.filter.arch_id')
        .col-md-4.col-sm-6
          %h4.medium= t 'layout.build_lists.project_name_search'
          %input#filter_project_name.form-control{ name: 'filter[filter_project_name]', size: '30',
            type: 'text', value: '{{params.filter.filter_project_name}}' }
        .col-md-4.col-sm-6
          %h4= t 'activerecord.attributes.build_list.status'
          = f.select :status, BuildList::STATUSES.collect{ |status| [BuildList.human_status(status), status] },
                     { include_blank: true },
                     html_options.merge(id: 'status', 'ng-model' => 'params.filter.status')
        .col-md-4.col-sm-6
          %h4= t 'activerecord.models.mass_build'
          = f.select :mass_build_id, mass_build_options, { include_blank: true },
                     html_options.merge(id: 'mass_build', 'ng-model' => 'params.filter.mass_build_id')
        .col-md-4.col-sm-6
          %h4= t 'layout.build_lists.id_search'
          %input#filter_id.form-control{ name: 'filter{id}', size: '30', type: 'text', value: '{{params.filter.id}}' }
        .clearfix
        .col-md-4.col-sm-6.offset10
          = label_tag :autoreload do
            = check_box_tag :autoreload, true, true
            = t 'layout.autoreload_page'
        .col-md-4.col-sm-6.col-md-offset-4.offset10
          .btn-group.btn-group-justified
            .btn-group{ 'ng-show' => 'isRequest' }
              %button.btn.btn-default{ type: 'button', disabled: true }
                = t('layout.processing')
            .btn-group{ 'ng-hide' => 'isRequest' }
              %button.btn.btn-primary{ type: 'button', 'ng-click' => 'refresh(true)' }
                %i.fa.fa-search
                = t('layout.search.header')
            .btn-group
              %button.btn.btn-primary{ type: 'button', 'ng-click' => 'clear()' }= t('reset')
            -if @project and can?(:create, @project.build_lists.build)
              .btn-group
                %button.btn.btn-primary{ id: 'filter_new_build', type: 'button',
                  onclick: "location.href='#{new_project_build_list_path(@project)}'" }
                  %i.fa.fa-plus
                  = t('layout.build_lists.new_header')
          = hidden_field_tag :name_with_owner, @project.try(:name_with_owner)
