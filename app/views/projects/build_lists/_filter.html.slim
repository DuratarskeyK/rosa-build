- html_options = { class: 'form-control' }
.panel.panel-info
  .panel-heading.pointer ng-click = 'isOpenFilters = !isOpenFilters'
    span.fa.fa-filter.fa-lg
    =< t 'layout.build_lists.filters'
    span.pull-right.fa ng-class = "{'fa-chevron-down': isOpenFilters, 'fa-chevron-up': !isOpenFilters}"
  .panel-body ng-show = 'isOpenFilters'
    = form_for :filter, html: { class: :form, id: 'monitoring_filter' }, authenticity_token: false do |f|
      .row
        .col-lg-12.col-md-4
          h4= t 'layout.build_lists.ownership.header'
          =f.hidden_field :ownership, value: '{{params.filter.ownership}}' if current_user
          .btn-group.btn-group-justified
            - ['owned', (@project ? nil : 'related'), 'everything'].compact.each do |ownership|
              .btn-group
                button.btn.btn-default[ ng-model  = 'params.filter.ownership'
                                        btn-radio = "'#{ownership}'"
                                        type      = 'button'
                                        disabled  = !current_user ]
                  = t "layout.build_lists.ownership.#{ownership}"

          h4= t 'number_rows'
          =hidden_field_tag :per_page, '{{params.per_page}}'
          =hidden_field_tag :page, '{{params.page}}'
          .btn-group.btn-group-justified
            -BuildList::Filter::PER_PAGE.each do |num|
              .btn-group
                button.btn.btn-default[ ng-model = 'params.per_page' btn-radio = "'#{num}'" type = 'button' ]= num

          h4= t 'activerecord.attributes.build_list.status'
          = f.select :status, BuildList::STATUSES.collect{ |status| [BuildList.human_status(status), status] },
                     { include_blank: true },
                     html_options.merge(id: 'status', 'ng-model' => 'params.filter.status')

        .col-lg-12.col-md-4
          h4= t 'activerecord.models.platform'
          = f.select :save_to_platform_id, filter_by_save_to_platform,
                     { include_blank: true },
                     html_options.merge(id: 'platform', 'ng-model' => 'params.filter.save_to_platform_id')

          h4= t 'activerecord.attributes.build_list.arch'
          = f.select :arch_id, Arch.recent.collect{ |arch| [arch.name, arch.id] }, { include_blank: true },
                     html_options.merge(id: 'architecture', 'ng-model' => 'params.filter.arch_id')

          h4= t 'activerecord.models.mass_build'
          = f.select :mass_build_id, mass_build_options, { include_blank: true },
                     html_options.merge(id: 'mass_build', 'ng-model' => 'params.filter.mass_build_id')

        .col-lg-12.col-md-4
          .row ng-controller = 'DatePickerController as datePickerCtrl'
            -[:updated_at_start, :updated_at_end].each do |attr|
              .col-lg-12.col-md-6
                h4= t attr == :updated_at_start ? '_on' : 'until'
                = f.text_field attr, size: 10, class: 'form-control',
                  'datepicker-popup' => '{{datePickerCtrl.format}}',
                  'ng-model' => "$scope.$parent.params.filter.#{attr}",
                  'is-open' => "datePickerCtrl.#{attr}_opened",
                  min: 'datePickerCtrl.minDate',
                  max: 'datePickerCtrl.maxDate',
                  'datepicker-options' => 'datePickerCtrl.dateOptions',
                  'date-disabled' => "datePickerCtrl.disabled(date, mode)",
                  'ng-click' => "datePickerCtrl.open_#{attr}($event)"
          h4.medium= t 'layout.build_lists.project_name_search'
          input#filter_project_name.form-control[ name     = 'filter[project_name]'
                                                  size     = '30'
                                                  type     = 'text'
                                                  value    = '{{params.filter.filter_project_name}}'
                                                  disabled = @project.present? ]

          h4= t 'layout.build_lists.id_search'
          input#filter_id.form-control[ name     = 'filter{id}'
                                        size     = '30'
                                        type     = 'text'
                                        value    = '{{params.filter.id}}'
                                        disabled = @project.present? ]

        .clearfix
        .col-lg-12.col-md-4.offset10
          = label_tag :autoreload do
            = check_box_tag :autoreload, true, true
            = t 'layout.autoreload_page'
        .col-lg-12.col-lg-offset-0.col-md-4.col-md-offset-4.offset10
          .btn-group.btn-group-justified
            .btn-group ng-show = 'isRequest'
              button.btn.btn-default type = 'button' disabled = true
                = t('layout.processing')
            .btn-group ng-hide = 'isRequest'
              button.btn.btn-primary type = 'button' ng-click = 'refresh(true)'
                i.fa.fa-search
                = t('layout.search.header')
            .btn-group
              button.btn.btn-primary[ type = 'button' ng-click = 'clear()' ]= t('reset')
