- set_meta_tags title: [title_object(@build_list.project), t('activerecord.models.build_list')]

= render 'submenu'

div[class         = 'container col-md-offset-2 col-md-8'
    ng-controller = 'BuildListController'
    ng-init       = "advisoriable_types = #{ BuildList::RELEASE_UPDATE_TYPES }" ]
  = hidden_field_tag :build_list_id, @build_list.id
  .row.alert.alert-info
    .alert.pull-left.submenu ng-class='"alert-" + build_list.status_color'
      p
        | {{build_list.human_status | i18n}}
    p.alert.alert-info.pull-right.submenu [
      am-time-ago = 'build_list.updated_at'
      title       = '{{build_list.updated_at_utc}}' ]

  = form_for @build_list, url: publish_build_list_path(@build_list) do |f|
    .row
      h3= t('layout.build_lists.main_data')
    .row
      .col-md-6
        b
          = t('activerecord.attributes.build_list.container_path')
      .col-md-6 ng-show="build_list.container_status == #{ BuildList::BUILD_PUBLISHED }"
        - url = container_url
        = link_to url, url
      .col-md-6 ng-show="build_list.container_status == #{ BuildList::BUILD_PUBLISH }"
        = t('layout.build_lists.creating')

    .row
      .col-md-6
        b
          = t('activerecord.attributes.build_list.id')
      .col-md-6
        = @build_list.id

    .row
      .col-md-6
        b
          = t('activerecord.attributes.build_list.user')
      .col-md-6
        = link_to @build_list.user.try(:fullname), @build_list.user

    .row
      .col-md-6
        b
          = t('activerecord.attributes.build_list.publisher')
      .col-md-6 ng-show='build_list.publisher'
        a ng-href='{{build_list.publisher.path}}'
          | {{build_list.publisher.fullname}}

    .row
      .col-md-6
        b
          = t('activerecord.attributes.build_list.build_for_platform')
      .col-md-6
        - if bfp = @build_list.build_for_platform
          = link_to bfp.name, bfp
        - else
          = t('layout.build_lists.platform_deleted')

    .row
      .col-md-6
        b
          = t('activerecord.attributes.build_list.save_to_repository')
      .col-md-6
        = link_to "#{@build_list.save_to_platform.name}/#{@build_list.save_to_repository.name}", [@build_list.save_to_platform, @build_list.save_to_repository]

    .row
      .col-md-6
        b
          = t('activerecord.attributes.build_list.include_testing_subrepository')
      .col-md-6
        = t("layout.#{@build_list.include_testing_subrepository?}_")

    .row
      .col-md-6
        b
          = t('activerecord.attributes.build_list.include_repos')
      .col-md-6
        = Repository.where(id: @build_list.include_repos).pluck(:name).join(', ')

    .row
      .col-md-6
        b
          = t('activerecord.attributes.build_list.update_type')
      .col-md-6
        = f.select :update_type,
          options_for_select(build_list_classified_update_types,
          @build_list.update_type),
          {},
          'ng-model'  => 'build_list.update_type',
          'ng-change' => 'updateTypeChanged()',
          'ng-show'   => 'build_list.can_publish'
        div ng-hide='build_list.can_publish'
          = @build_list.update_type
    .row
      .offset20.ng-hide ng-show='update_type_errors'
        .flash_notify
          .alert ng-class="{ 'alert-danger': update_type_errors }"
            | {{ update_type_errors }}

    .row
      .col-md-6
        b
          = t('activerecord.attributes.build_list.auto_publish_status')
      .col-md-6
        = t("layout.build_lists.auto_publish_status.#{@build_list.auto_publish_status}")

    .row
      .col-md-6
        b
          = t('activerecord.attributes.build_list.auto_create_container')
      .col-md-6
        = t("layout.#{@build_list.auto_create_container?}_")

    .row
      .col-md-6
        b
          = t('activerecord.attributes.build_list.use_cached_chroot')
      .col-md-6
        = t("layout.#{@build_list.use_cached_chroot?}_")

    .row
      .col-md-6
        b
          = t('activerecord.attributes.build_list.use_extra_tests')
      .col-md-6
        = t("layout.#{@build_list.use_extra_tests?}_")

    .row
      .col-md-6
        b
          = t('activerecord.attributes.build_list.save_buildroot')
      .col-md-6
        = t("layout.#{@build_list.save_buildroot?}_")

    .row
      .col-md-6
        b
          = t('activerecord.attributes.build_list.project_version')
      .col-md-6
        = link_to @build_list.project_version, tree_path(@build_list.project, @build_list.project_version)

    .row
      .col-md-6
        b
          = t('diff')
      .col-md-6
        = build_list_version_link(@build_list)

    .row
      .col-md-6
        b
          = t('activerecord.attributes.build_list.arch')
      .col-md-6
        = @build_list.arch.name

    .row
      .col-md-6
        b
          = t('activerecord.attributes.build_list.updated_at')
      .col-md-6
        | {{build_list.updated_at_utc}}

    - if @build_list.external_nodes.present?
      .row
        .col-md-6
          b
            = t('activerecord.attributes.build_list.external_nodes')
        .col-md-6
          = I18n.t("layout.build_lists.external_nodes.#{@build_list.external_nodes}")

      .row
        .col-md-6
          b
            = t('activerecord.attributes.build_list.builder')
        .col-md-6 ng-show='build_list.builder'
          a ng-href='{{build_list.builder.path}}'
            | {{build_list.builder.fullname}}

    .row
      .col-md-6
        b
          = t('activerecord.attributes.build_list.is_circle')
      .col-md-6
        = t("layout.#{@build_list.is_circle?}_")

    .row
      .col-md-6
        b
          = t('activerecord.attributes.build_list.new_core')
      .col-md-6
        = t("layout.#{@build_list.new_core?}_")

    - if @build_list.extra_build_lists.present? || @build_list.extra_repositories.present?
      .row
        .col-md-6
          b
            = t('activerecord.attributes.build_list.extra_repositories')
        .col-md-6
          - Repository.where(id: @build_list.extra_repositories).each do |repo|
            p
              = link_to "#{repo.platform.name}/#{repo.name}", [repo.platform, repo]
          - BuildList.where(id: @build_list.extra_build_lists).each do |bl|
            p
              = link_to "#{bl.id} (#{bl.project.name} - #{bl.arch.name})", bl

    - if @build_list.extra_params.present?
      .row
        .col-md-6
          b
            = t('activerecord.attributes.build_list.extra_params.label')
        .col-md-6
      - @build_list.extra_params.each do |k, v|
        .row
          .col-md-6
            i
              = t("activerecord.attributes.build_list.extra_params.#{k}")
          .col-md-6
            = v

    - if @build_list.mass_build_id.present?
      .row
        .col-md-6
          b
            = t('activerecord.attributes.mass_build_id')
        .col-md-6
          = link_to @build_list.mass_build.name,
            platform_mass_build_path(@build_list.save_to_platform, @build_list.mass_build_id)

    .row ng-show='build_list.advisory'
      .col-md-6
        b
          = t('layout.build_lists.attached_advisory')
      .col-md-6
        a ng-href='{{build_list.advisory.path}}'
          | {{build_list.advisory.advisory_id}}

    .row ng-show='build_list.human_duration'
      .col-md-6
      .col-md-6
        | {{build_list.human_duration }}

    - if @build_list.save_to_platform.released
      .row ng-show='build_list.can_publish && !build_list.advisory'
        .col-md-6
          b
            = t('layout.build_lists.attached_advisory')
        .col-md-6
          = select_tag :attach_advisory,
            advisories_select_options(@advisories),
            'ng-model'  => 'attach_advisory',
            'ng-change' => 'attachAdvisoryChanged()'
          p.help-block
            = t('layout.advisories.publication_info',
              update_types: BuildList::RELEASE_UPDATE_TYPES.join(', '))

      .row ng-show='attach_advisory != "no" && attach_advisory != "new"'
        .col-md-6
          i
            = t('layout.advisories.search_hint')
        .col-md-6
          input.form-control type='text' ng-model='term' ng-keyup='search()'
          p.help-block
            = t('layout.advisories.advisory_id_info',
              advisory_format: advisory_id_for_hint)
          - I18n.t('layout.advisories.banners').keys.each do |key|
            .info class=key ng-show="search_status == '#{key}'"
              p.help-block
                = t("layout.advisories.banners.#{key}")

      .row ng-show='attach_advisory == "new"'
        = f.fields_for @build_list.build_advisory do |f|
          = render partial: 'advisories/form', locals: {f: f}

      .row.alert.alert-info ng-show='attach_advisory != "no" && attach_advisory != "new"'
        .row
          .col-md-6
            i
              =t('activerecord.models.advisory')
          .col-md-6
            b
              | {{advisory.advisory_id}}

        .row
          .col-md-6
            i
              = t('activerecord.attributes.advisory.description')
          .col-md-6 ng-bind-html='advisory.description'
        .row
          .col-md-6
            i
              = t('activerecord.attributes.advisory.references')
          .col-md-6
            | {{advisory.references}}

    / - if @build_list.save_to_platform.released
    /   #advisory_block{'ng-show' => 'build_list.can_publish && !build_list.advisory'}
    /     .leftlist= label_tag :attach_advisory, t("layout.build_lists.attached_advisory")
    /     .rightlist
    /       = select_tag :attach_advisory, advisories_select_options(@advisories), 'ng-model' => 'attach_advisory', 'ng-change' => 'attachAdvisoryChanged()'
    /       %p.hint_text= t("layout.advisories.publication_info", update_types: BuildList::RELEASE_UPDATE_TYPES.join(', '))
    /     .both

    /     #advisory_search_block{'ng-show' => 'attach_advisory != "no" && attach_advisory != "new"'}
    /       %h3= t("layout.advisories.search_by_id")
    /       .leftlist= label_tag :advisory_search, t("layout.advisories.search_hint")
    /       .rightlist
    /         %input#advisory_search{type: 'text', 'ng-model' => 'term', 'ng-keyup' => 'search()'}
    /         %p.hint_text= t("layout.advisories.advisory_id_info", advisory_format: advisory_id_for_hint)
    /       .both
    /       - I18n.t('layout.advisories.banners').keys.each do |key|
    /         .info{class: key, 'ng-show' => "search_status == '#{key}'"}
    /           %p= t("layout.advisories.banners.#{key}")

    /     #new_advisory_form{'ng-show' => 'attach_advisory == "new"'}
    /       = f.fields_for @build_list.build_advisory do |f|
    /         = render partial: 'advisories/form', locals: {f: f}

    /     #advisory_preview{'ng-show' => 'attach_advisory != "no" && attach_advisory != "new"'}
    /       %h3= t('activerecord.models.advisory') << ' {{advisory.advisory_id}}'

    /       .leftlist= t('activerecord.attributes.advisory.description')
    /       .rightlist.descr {{advisory.description}}
    /       .both

    /       .leftlist= t('activerecord.attributes.advisory.references')
    /       .rightlist.refs {{advisory.references}}
    /       .both

    .row.alert.alert-danger ng-hide='build_list.extra_build_lists_published'
      = t('layout.build_lists.publish_with_extra_fail')

    - unless @build_list.valid_branch_for_publish?
      .row.alert.alert-danger
        = t('layout.build_lists.wrong_branch_for_publish_html',
          branch: @build_list.save_to_repository.publish_builds_only_from_branch)

    .row.alert.alert-danger ng-show='build_list.can_publish && build_list.can_publish_in_future && !build_list.can_publish_into_repository'
      = t('flash.build_list.not_all_build_lists_success')

    hr
    .row
      - if can?(:cancel, @build_list)
        = link_to t("layout.build_lists.cancel"),
          cancel_build_list_path(@build_list),
          method:       :put,
          data:         { confirm: t('layout.confirm') },
          class:        'btn',
          'ng-show' =>  'build_list.can_cancel'
        | &nbsp;

      = submit_tag t('layout.publish_again'),
        data:         { confirm: t("layout.publish_again_warning") },
        name:         'publish',
        'ng-show' =>  "build_list.can_publish && build_list.status == #{BuildList::BUILD_PUBLISHED}"

      = submit_tag t('layout.publish'),
        data:         { confirm: t('layout.build_lists.tests_failed') },
        name:         'publish',
        'ng-show' =>  "build_list.can_publish && build_list.can_publish_in_future && build_list.extra_build_lists_published && build_list.status == #{BuildList::TESTS_FAILED}"

      = submit_tag t('layout.publish'),
        data:         { confirm: t('layout.confirm') },
        name:         'publish',
        'ng-show' =>  "build_list.can_publish && build_list.can_publish_in_future && build_list.extra_build_lists_published && build_list.status != #{BuildList::TESTS_FAILED} && build_list.status != #{BuildList::BUILD_PUBLISHED}"

      = link_to t('layout.publish_into_testing'),
        publish_into_testing_build_list_path(@build_list),
        method:   :put,
        data:     { confirm: t('layout.confirm') },
        class:    'btn',
        'ng-show'   => 'build_list.can_publish_into_testing'

      - if can?(:reject_publish, @build_list)
        = link_to t('layout.reject_publish'),
          reject_publish_build_list_path(@build_list),
          method:       :put,
          data:         { confirm: t('layout.confirm') },
          class:        'btn',
          'ng-show' =>  'build_list.can_reject_publish'

      - if can?(:rerun_tests, @build_list)
        = link_to t('layout.build_lists.rerun_tests'),
          rerun_tests_build_list_path(@build_list),
          method:       :put,
          data:         { confirm: t('layout.confirm') },
          class:        'btn',
          'ng-show' =>  "build_list.status == #{BuildList::TESTS_FAILED} || build_list.status == #{BuildList::SUCCESS}"

      - if can?(:create_container, @build_list)
        = link_to t('layout.build_lists.create_container'),
          create_container_build_list_path(@build_list),
          method:       :put,
          data:         { confirm: t("layout.confirm") },
          class:        'btn',
          'ng-show' =>  'build_list.can_create_container'

      - if can? :create, @build_list
        = link_to t('layout.build_lists.recreate_build_list'), new_project_build_list_path(@build_list.project, build_list_id: @build_list.id),
          class: 'btn'

        - if can_run_dependent_build_lists?(@build_list)
          = link_to t('projects.build_lists.dependent_projects.title'),
            dependent_projects_build_list_path(@build_list),
            class:        'btn',
            'ng-show' =>  'build_list.dependent_projects_exists'

    .row.offset20 ng-show="build_list.status == #{BuildList::BUILD_STARTED}"
      = render 'shared/log', { build_started: true, get_log_path: log_build_list_path(@build_list) }

    hr
    .row
      h3
        = t('layout.build_lists.items_header')
      h4 ng-hide='build_list.item_groups'
        = t("layout.build_lists.no_items_data")

    div ng-repeat='group in build_list.item_groups'
      .row ng-repeat='item in group'
        h4
          | {{item.name + ' #' + item.level}}

        table.table.table-hover
          thead
            tr
              th= t('activerecord.attributes.build_list/item.name')
              th= t('activerecord.attributes.build_list/item.version')
              th= t('activerecord.attributes.build_list/item.status')
          tbody
            tr class="{{build_list.itemStatusColor(item.status)}}"
              td
                | {{item.name}}
              td
                a ng-href='{{item.path.href}}'
                  | {{item.path.text}}
              td
                | {{build_list.humanStatus(item.status) | i18n}}

    .row ng-show='build_list.packages'
      hr
      h3
        = t('layout.build_lists.packages_header')
      table.table.table-hover
        thead
          tr
            th= t('activerecord.attributes.build_list/package.fullname')
            th= t('activerecord.attributes.build_list/package.name')
            th= t('activerecord.attributes.build_list/package.epoch')
            th= t('activerecord.attributes.build_list/package.version')
            th= t('activerecord.attributes.build_list/package.release')
        tbody
          tr ng-repeat-start='package in build_list.packages'
            td.package
              a.expand ng-show='package.dependent_projects'
                span.icon-chevron-up[
                  ng-show   = 'package.show_dependent_projects'
                  ng-click  = 'package.show_dependent_projects = false' ]
                span.icon-chevron-down[
                  ng-hide   = 'package.show_dependent_projects'
                  ng-click  = 'package.show_dependent_projects = true' ]
              div ng-if='!package.url'
                | {{package.fullname}}
              a ng-if='package.url' ng-href="{{package.url}}"
                | {{package.fullname}}

            td
              | {{package.name}}
            td
              | {{package.epoch}}
            td
              | {{package.version}}
            td
              | {{package.release}}

            tr[
              ng-repeat-end = ''
              ng-show       = 'package.show_dependent_projects'
              ng-repeat     = 'project in package.dependent_projects' ]
            td
              a ng-href="{{project.url}}"
                | {{project.name}}
            td
              p ng-repeat='package in project.dependent_packages'
                | {{package}}
            td colspan=3
              a ng-href='{{project.new_url}}'
                = t('layout.build_lists.create_build_list')

    - if @build_list.new_core?
      hr
      .row
        = render 'shared/build_results', subject: @build_list
