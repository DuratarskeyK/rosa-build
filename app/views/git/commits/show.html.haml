.block
  = render :partial => "git/shared/navigation"

  = render :partial => "git/shared/info"


.block
  .content
    .inner
      = render :partial => "git/commits/commits", :object => [@commit]

- begin
  .block
    .content
      .inner
        .patch_and_diff
          #{link_to "raw diff", commit_path(@project, @commit.id, :diff)} | #{link_to "patch", commit_path(@project, @commit.id, :patch)}
        .clear
        = render_commit_stats(@commit.stats)

  = render :partial => "git/commits/commit_diff", :collection => @commit.diffs
- rescue Grit::Git::GitTimeout
  .block
    .content
      .inner
        %p= t 'layout.git.repositories.commit_diff_too_big'

- content_for :sidebar, render(:partial => 'git/shared/sidebar')

%a{ :name => "comments" }
.block#block-list
  .content
    %h2.title
      = t("layout.issues.comments_header")
    .inner
      %ul.list
        - Project.commit_comments(@commit, @project).each do |comment|
          %li
            .left
              = link_to comment.user.uname, user_path(comment.user.uname)
            .item
              = comment.body
              %br
              %br
              = link_to t("layout.edit"), edit_project_commit_comment_path(@project, @commit.id, comment) if can? :update, comment
              = link_to image_tag("web-app-theme/icons/cross.png", :alt => t("layout.delete")) + " " + t("layout.delete"), project_commit_comment_path(@project, @commit.id, comment), :method => "delete", :class => "button", :confirm => t("layout.comments.confirm_delete") if can? :delete, comment

.block
  .content
    %h2.title
      = t("layout.comments.new_header")
    .inner
      = form_for :comment, :url => project_commit_comments_path(@project, @commit.id), :method => :post, :html => { :class => :form } do |f|
        = render :partial => "comments/form", :locals => {:f => f}
