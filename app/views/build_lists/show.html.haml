-set_meta_tags :title => [title_object(@build_list.project), t('activerecord.models.build_list')]
.notify.blue
  %div{:class => build_list_status_color(@build_list.status)}
    %p= @build_list.human_status
  %p 2012-01-27 17:28:05 UTC
  .both
%h3= t("layout.build_lists.main_data")
.leftside.width125= t("activerecord.attributes.build_list.container_path")
.leftside
  - if @build_list.status == BuildList::BUILD_PUBLISHED
    = t("layout.build_lists.container_published")
  - elsif @build_list.container_path.present?
    - container_url = "http://#{request.host_with_port}/downloads#{@build_list.container_path}"
    = link_to container_url, container_url
.both
.leftside.width125= t("activerecord.attributes.build_list.user")
.leftside
  = link_to @build_list.user.try(:fullname), @build_list.user
.both
= link_to t("layout.publish"), publish_build_list_path(@build_list), :method => "put", :confirm => t("layout.confirm"), :class => "button tmargin10" if @build_list.can_publish? and can?(:publish, @build_list)
.hr
%h3= t("layout.build_lists.main_data")
.leftside.width125= t("activerecord.attributes.build_list.bpl")
.leftside
  = link_to @build_list.bpl.name, @build_list.bpl
.both
.leftside.width125= t("activerecord.attributes.build_list.pl")
.leftside
  = link_to @build_list.pl.name, @build_list.pl
.both
.leftside.width125= t("activerecord.attributes.build_list.include_repos")
.leftside= (@build_list.include_repos||[]).map{|r| Repository.find(r).name}.join(', ')
.both
.leftside.width125= t("activerecord.attributes.build_list.update_type")
.leftside= @build_list.update_type
.both
.leftside.width125= t("activerecord.attributes.build_list.build_requires")
.leftside= @build_list.build_requires
.both
.leftside.width125= t("activerecord.attributes.build_list.auto_publish")
.leftside= @build_list.auto_publish
.both
.leftside.width125= t("activerecord.attributes.build_list.project_version")
.leftside= @build_list.project_version
.both
.leftside.width125= t("activerecord.attributes.build_list.arch")
.leftside= @build_list.arch.name
.both
.leftside.width125= t("activerecord.attributes.build_list.updated_at")
.leftside= @build_list.updated_at
.both
.leftside.width125= t("activerecord.attributes.build_list.is_circle")
.leftside= t("layout.#{@build_list.is_circle?}_")
.both
- if @build_list.finished?
  %br
  .leftside.width125
  .leftside= @build_list.human_duration
  .both
- if !@build_list.finished? && @build_list.started_at
  %br
  .leftside.width125
  .leftside= @build_list.human_current_duration
  .both
  .leftside.width125
  .leftside= @build_list.project.human_average_build_time
  .both

.hr
%h3= t("layout.build_lists.items_header")
- if @item_groups.blank?
  %h4.nomargin= t("layout.build_lists.no_items_data")
- @item_groups.each_with_index do |group, level|
  -#%h4.nomargin= "#{group} ##{level}"
  - group.each do |item|
    %h4.nomargin= "#{item.name} ##{level}"
    %table.tablesorter.width565{:cellpadding => "0", :cellspacing => "0"}
      %thead
        %tr
          %th= t("activerecord.attributes.build_list/item.name")
          %th= t("activerecord.attributes.build_list/item.version")
          %th= t("activerecord.attributes.build_list/item.status")
      %tbody
        %tr{:class => build_list_item_status_color(item.status)}
          %td= item.name
          %td= item.version
          %td= item.human_status
.both

:javascript
  $('article .all').addClass('bigpadding');

= render 'build_lists/submenu'
